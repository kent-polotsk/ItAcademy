// <auto-generated />
#nullable enable
namespace Mappers.Mappers
{
    public partial class ArticleMapper
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.0.0")]
        public partial global::DataConvert.DTO.ArticleDto ArticleToArticleDto(global::EFDatabase.Entities.Article? article)
        {
            if (article == null)
                throw new System.ArgumentNullException(nameof(article));
            var target = new global::DataConvert.DTO.ArticleDto();
            target.Id = article.Id;
            target.Title = article.Title;
            target.Description = article.Description;
            target.Content = article.Content;
            target.Created = article.Created;
            target.Updated = article.Updated;
            target.Url = article.Url;
            target.ImageUrl = article.ImageUrl;
            target.PositivityRate = article.PositivityRate;
            if (article.Source.Name != null)
            {
                target.SourceName = article.Source.Name;
            }
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.0.0")]
        public partial global::ArticleModel ArticleDtoToArticleModel(global::DataConvert.DTO.ArticleDto? atricleDto)
        {
            if (atricleDto == null)
                throw new System.ArgumentNullException(nameof(atricleDto));
            var target = new global::ArticleModel();
            target.Id = atricleDto.Id;
            target.Title = atricleDto.Title;
            target.Description = atricleDto.Description;
            target.Created = atricleDto.Created;
            target.Updated = atricleDto.Updated;
            target.Content = atricleDto.Content;
            target.ImageUrl = atricleDto.ImageUrl;
            target.SourceName = atricleDto.SourceName;
            target.PositivityRate = atricleDto.PositivityRate;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.0.0")]
        public partial global::DataConvert.DTO.ArticleDto ArticleModelToArticleDto(global::ArticleModel? articleModel)
        {
            if (articleModel == null)
                throw new System.ArgumentNullException(nameof(articleModel));
            var target = new global::DataConvert.DTO.ArticleDto();
            target.Id = articleModel.Id;
            target.Title = articleModel.Title;
            target.Description = articleModel.Description;
            target.Content = articleModel.Content;
            target.Created = articleModel.Created;
            target.Updated = articleModel.Updated;
            target.ImageUrl = articleModel.ImageUrl;
            target.PositivityRate = articleModel.PositivityRate;
            if (articleModel.SourceName != null)
            {
                target.SourceName = articleModel.SourceName;
            }
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.0.0")]
        public partial void UpdateArticleFromDto(global::DataConvert.DTO.ArticleDto sourceDto, global::EFDatabase.Entities.Article targetArticle)
        {
            targetArticle.Id = sourceDto.Id;
            targetArticle.Title = sourceDto.Title;
            targetArticle.Description = sourceDto.Description;
            targetArticle.Content = sourceDto.Content;
            targetArticle.Created = sourceDto.Created;
            targetArticle.Updated = sourceDto.Updated;
            targetArticle.PositivityRate = sourceDto.PositivityRate;
        }
    }
}